---
import { Image } from '@astrojs/image/components';
import type { Project } from '@/content/config';
import { getPlaiceholder } from 'plaiceholder';
import Link from '@/components/shared/link';
import Tooltip from '../shared/tooltip.astro';

export interface Props {
  project: Project;
}

const project = Astro.props.project;
const { img } = await getPlaiceholder(project.coverImage);
const domains = project.domains
  .map((domain) => `project-card--${domain.toLowerCase()}`)
  .join(' ');
---

<div>
  <div class={'project-card ' + domains}>
    <div class="project-card__header">
      <figure
        class="project-card__media"
        style={{
          'aspect-ratio': `${img.width / img.height}`,
        }}
      >
        <Image
          class="project-card__image"
          src={img.src}
          alt={project.title}
          height={img.height}
          width={img.width}
        />
      </figure>
      <ul class="project-card__stack">
        {
          project.techStack.map((stack) => {
            return (
              <li>
                <Tooltip text={stack.alt}>
                  <div class="project-card__stack-item">
                    <Image
                      src={stack.link}
                      alt={stack.alt}
                      height={28}
                      width={28}
                    />
                  </div>
                </Tooltip>
              </li>
            );
          })
        }
      </ul>
    </div>
    <div class="project-card__content">
      <h2 class="project-card__title">{project.title}</h2>
      <p class="project-card__description">{project.description}</p>
    </div>
    <ul class="project-card__action">
      <Link
        icon="github"
        target="_blank"
        href={project.links.github}
        text="Github"
      />
      {
        project.links.preview && (
          <Link
            icon="play"
            target="_blank"
            href={project.links.preview}
            text="Preview"
          />
        )
      }
    </ul>
  </div>
</div>

<style lang="scss" scoped>
  @use '../../scss/variables/main.scss' as variables;
  @use '../../scss/mixins/main.scss' as mixins;

  .project-card {
    padding: 2rem 1.5rem;
    border-radius: 10px;
    min-height: 60rem;
    border: 1px solid rgba(variables.$color-gray-light, 0.15);
    display: flex;
    flex-direction: column;
    width: 23%;
    margin-bottom: 2rem;

    @include mixins.respond(laptop-lg) {
      width: 31%;
    }

    @include mixins.respond(laptop-sm) {
      width: 48%;
    }

    @include mixins.respond(tab-port) {
      width: 100%;
    }

    @include mixins.respond(tab-land) {
      min-height: 0;
    }
  }

  .project-card__header {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .project-card__media {
    position: relative;
  }

  .project-card__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;

    border-radius: 10px;
  }

  .project-card__stack {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .project-card__stack-item img {
    border-radius: 50%;
  }

  .project-card__content {
  }

  .project-card__title {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    margin-top: 1.5rem;
  }

  .project-card__description {
    font-size: 1.55rem;
    margin-bottom: 3rem;
    display: flex;
    line-height: 1.6;
    color: variables.$color-gray-dark;
  }

  .project-card__action {
    display: flex;
    align-items: flex-end;
    gap: 2rem;
    margin-top: auto;
  }
</style>

---
import type { Work } from '@/content/config';
import ChatOutline from '@/icons/chat-outline';
import LinkedIn from '@/icons/linkedin';
import { Image } from '@astrojs/image/components';
import { getPlaiceholder } from 'plaiceholder';
import Link from '../shared/link';

export interface Props {
  work: Work;
}

const work = Astro.props.work;
const { img } = await getPlaiceholder(work.coverImage);
---

<div class="workex-card">
  <div>
    <div class="workex-card__content">
      <h2 class="workex-card__title">{work.title}</h2>
      <div class="workex-card__stack">
        {
          work.techStack.map((stack) => (
            <figure>
              <Image
                style={{ 'border-radius': '50%' }}
                src={stack.link}
                alt={stack.alt}
                loading="lazy"
                height={30}
                width={30}
              />
            </figure>
          ))
        }
      </div>
      <small class="workex-card__role">{work.domains[0]} Developer</small>
      <p class="workex-card__description">{work.description}</p>
    </div>
    <ul class="workex-card__action">
      {
        work.links.linkedIn && (
          <Link
            target="_blank"
            icon={LinkedIn as unknown as HTMLElement}
            text="Linked In"
            href={work.links.linkedIn}
          />
        )
      }
      {
        work.links.testimonial && (
          <Link
            target="_blank"
            text="Testimonial"
            icon={ChatOutline as unknown as HTMLElement}
            href={work.links.testimonial}
          />
        )
      }
    </ul>
  </div>
  <figure
    class="workex-card__media"
    style={{
      'aspect-ratio': `${img.width / img.height}`,
    }}
  >
    <Image
      class="workex-card__image"
      src={img.src}
      alt={work.title}
      height={img.height}
      width={img.width}
    />
  </figure>
</div>

<style lang="scss" scoped>
  @use '../../scss/variables/main.scss' as variables;
  @use '../../scss/mixins/main.scss' as mixins;

  .workex-card {
    border-radius: 10px;
    position: relative;
    padding: 2rem 1.5rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 3rem;

    border: 1px solid rgba(variables.$color-gray-light, 0.15);
    max-width: 90rem;

    margin-bottom: 2rem;

    @include mixins.respond(tab-land) {
      grid-template-columns: 1fr;
    }
  }

  .workex-card__role {
    text-transform: uppercase;
    font-weight: variables.$fw-bold;
    font-size: 1.4rem;
    margin-bottom: 1.5rem;
    display: block;
    text-align: end;
  }

  .workex-card__stack {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    justify-content: flex-end;
  }

  .workex-card__content {
    margin-bottom: 3rem;
  }

  .workex-card__title {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    margin-top: 1.5rem;
  }

  .workex-card__description {
    font-size: 1.55rem;
    display: flex;
    line-height: 1.6;
    color: variables.$color-gray-dark;
    margin-bottom: 1.5rem;
  }

  .workex-card__action {
    display: flex;
    align-items: flex-end;
    gap: 2rem;
  }

  .workex-card__media {
    box-shadow: 0 0 10px 0 rgba(variables.$color-black, 0.2);
    position: relative;
    overflow: hidden;
    border-radius: 10px;

    @include mixins.respond(tab-land) {
      order: -1;
    }
  }

  .workex-card__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
</style>
